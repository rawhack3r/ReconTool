import subprocess
import json
import os
from core.error_handler import ErrorHandler

def run(target, progress_callback=None):
    """Run Nuclei for vulnerability scanning"""
    output_file = f"nuclei_{target}.json"
    results = {"vulnerabilities": []}
    
    try:
        if progress_callback:
            progress_callback("nuclei", 10, "Starting Nuclei...")
        
        # Run Nuclei
        command = f"nuclei -u {target} -json -o {output_file}"
        subprocess.run(command, shell=True, check=True)
        
        if progress_callback:
            progress_callback("nuclei", 70, "Processing results...")
        
        # Parse results
        if os.path.exists(output_file):
            with open(output_file, 'r') as f:
                for line in f:
                    try:
                        vuln = json.loads(line)
                        results["vulnerabilities"].append({
                            "template": vuln.get("template", ""),
                            "severity": vuln.get("severity", "unknown"),
                            "url": vuln.get("host", ""),
                            "description": vuln.get("info", {}).get("description", "")
                        })
                    except:
                        continue
        
        return results
    
    except Exception as e:
        ErrorHandler.log_error("nuclei", str(e), target)
        raise