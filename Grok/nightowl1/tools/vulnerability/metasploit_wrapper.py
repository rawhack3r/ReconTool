import subprocess
from core.error_handler import ErrorHandler
import os

def run_metasploit(target, output):
    command = f"msfconsole -q -x 'use auxiliary/scanner/http; set RHOSTS {target}; run; exit' > {output}"
    try:
        result = subprocess.run(command, shell=True, check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        return parse_metasploit_output(output)
    except subprocess.CalledProcessError as e:
        ErrorHandler.log_error(f"Metasploit failed for {target}: {e.stderr.decode()}")
        return []

def parse_metasploit_output(output_file):
    vulnerabilities = []
    with open(output_file, 'r') as f:
        for line in f:
            if "[+]" in line:
                vulnerabilities.append({'type': 'Metasploit Finding', 'details': line.strip()})
                with open("output/vulnerabilities/vulns.txt", "a") as f:
                    f.write(f"{line.strip()}\n")
    return vulnerabilities