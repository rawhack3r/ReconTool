import subprocess
import json
from core.error_handler import ErrorHandler
from core.vulnerability_scanner import VulnerabilityScanner
import os

def run_nuclei(target, output):
    command = f"nuclei -u {target} -t templates/ -o {output} -json"
    try:
        result = subprocess.run(command, shell=True, check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        return parse_nuclei_output(output)
    except subprocess.CalledProcessError as e:
        ErrorHandler.log_error(f"Nuclei failed for {target}: {e.stderr.decode()}")
        return []

def parse_nuclei_output(output_file):
    vulnerabilities = []
    scanner = VulnerabilityScanner()
    with open(output_file, 'r') as f:
        for line in f:
            vuln = json.loads(line.strip())
            vulnerabilities.append({
                'domain': vuln.get('host'),
                'path': vuln.get('path'),
                'type': vuln.get('type'),
                'severity': vuln.get('severity'),
                'owasp_category': scanner.map_to_owasp_top_10(vuln.get('type'))
            })
            with open("output/vulnerabilities/vulns.txt", "a") as f:
                f.write(f"{vuln.get('host')} - {vuln.get('path')} - {vuln.get('type')} ({vuln.get('severity')}) - OWASP: {scanner.map_to_owasp_top_10(vuln.get('type'))}\n")
    return vulnerabilities